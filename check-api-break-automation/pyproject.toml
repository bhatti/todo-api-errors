[tool.poetry]
name = "api-compatibility-checker"
version = "1.0.0"
description = "Production-ready API backward compatibility checker using Vertex AI with LangChain/LangGraph"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "check_api_break_automation"}]

[tool.poetry.dependencies]
python = "^3.8"
langchain = "^0.1.0"
langchain-google-vertexai = "^0.1.0"
langgraph = "^0.0.50"
pydantic = "^2.0.0"
google-cloud-aiplatform = "^1.38.0"
google-auth = "^2.25.0"
pyyaml = "^6.0"
click = "^8.1.0"
rich = "^13.7.0"
python-dotenv = "^1.0.0"
mcp = "^0.1.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
black = "^23.0.0"
flake8 = "^6.0.0"
mypy = "^1.0.0"
coverage = "^7.3.0"
pytest-cov = "^4.1.0"

[tool.poetry.group.enhanced.dependencies]
deepdiff = "^6.7.0"
colorama = "^0.4.6"
aiofiles = "^23.0.0"

[tool.poetry.scripts]
check-api-compat = "api_compatibility_checker:main"
proto-modifier = "proto_modifier:main"
mcp-proto-server = "mcp_proto_server:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | build
  | dist
  | __pycache__
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = false
no_implicit_optional = true
check_untyped_defs = true
strict_optional = true
strict_equality = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --cov=check_api_break_automation --cov-report=term-missing"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["check_api_break_automation"]
omit = ["*/tests/*", "*/test_*.py", "*/__pycache__/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.flake8]
max-line-length = 100
exclude = [".git", "__pycache__", "build", "dist", ".venv"]
ignore = ["E203", "W503", "E501"]
per-file-ignores = ["__init__.py:F401"]